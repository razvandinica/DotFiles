return {
  'kevinhwang91/nvim-ufo',
  dependencies = {
    'kevinhwang91/promise-async',
  },
  config = function()
    vim.opt.foldenable = true
    vim.opt.foldmethod = 'indent'
    -- vim.opt.foldlevel = 99
    -- vim.opt.foldlevelstart = 99
    vim.opt.fillchars:append('fold:-')
  end,
  init = function()
    local handler = function(virtText, lnum, endLnum, width, truncate)
      local newVirtText = {}
      local suffix = (' 󰁂 %d '):format(endLnum - lnum)
      local sufWidth = vim.fn.strdisplaywidth(suffix)
      local targetWidth = width - sufWidth
      local curWidth = 0
      for _, chunk in ipairs(virtText) do
        local chunkText = chunk[1]
        local chunkWidth = vim.fn.strdisplaywidth(chunkText)
        if targetWidth > curWidth + chunkWidth then
            table.insert(newVirtText, chunk)
        else
            chunkText = truncate(chunkText, targetWidth - curWidth)
            local hlGroup = chunk[2]
            table.insert(newVirtText, {chunkText, hlGroup})
            chunkWidth = vim.fn.strdisplaywidth(chunkText)
            -- str width returned from truncate() may less than 2nd argument, need padding
            if curWidth + chunkWidth < targetWidth then
                suffix = suffix .. (' '):rep(targetWidth - curWidth - chunkWidth)
            end
            break
        end
        curWidth = curWidth + chunkWidth
      end
      table.insert(newVirtText, {suffix, 'MoreMsg'})
      return newVirtText
    end
    local ftMap = {
      default = {
        "treesitter",
      }       
    }
    local ufo = require("ufo")
    ufo.setup({
      provider_selector = function(bufnr, filetype, buftype)
        return ftMap[filetype]
      end,
      close_fold_kinds_for_ft = {
        default = {
          "imports",
          "comments",
        },
        json = {
          "array",
        },
      },
      open_fold_hl_timeout = 400,
      preview = {
        win_config = {
          border = {
            'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h',
          },
          winhighlight = 'Normal:Normal', --'Normal:Folded',
          winblend = 12
        }
      },
      fold_virt_text_handler = handler,
    })
  end
}
